C51 COMPILER V9.60.0.0   LCD1602                                                           05/18/2023 12:23:42 PAGE 1   


C51 COMPILER V9.60.0.0, COMPILATION OF MODULE LCD1602
OBJECT MODULE PLACED IN .\Obj\lcd1602.obj
COMPILER INVOKED BY: C:\Keil_v5\C51\BIN\C51.EXE App\lcd1602\lcd1602.c OPTIMIZE(8,SPEED) BROWSE INCDIR(.\App\24c02;.\App\
                    -iic;.\App\key;.\App\smg;.\Public;.\App\ds18b20;.\App\ds1302;.\App\ired;.\App\time;.\App\xpt2046;.\App\pwm;.\App\lcd1602)
                    - DEBUG OBJECTEXTEND PRINT(.\Obj\lcd1602.lst) TABS(2) OBJECT(.\Obj\lcd1602.obj)

line level    source

   1          #include "lcd1602.h"
   2          
   3          
   4          //函数定义：
   5          /**
   6            * @brief  LCD1602延时函数，12MHz调用可延时1ms
   7            * @param  无
   8            * @retval 无
   9            */
  10          void LCD_Delay()
  11          {
  12   1        unsigned char i, j;
  13   1      
  14   1        i = 2;
  15   1        j = 239;
  16   1        do
  17   1        {
  18   2          while (--j);
  19   2        } while (--i);
  20   1      }
  21          
  22          /**
  23            * @brief  LCD1602写命令
  24            * @param  Command 要写入的命令
  25            * @retval 无
  26            */
  27          void LCD_WriteCommand(unsigned char Command)
  28          {
  29   1        LCD_RS=0;
  30   1        LCD_RW=0;
  31   1        LCD_DataPort=Command;
  32   1        LCD_EN=1;
  33   1        LCD_Delay();
  34   1        LCD_EN=0;
  35   1        LCD_Delay();
  36   1      }
  37          
  38          /**
  39            * @brief  LCD1602写数据
  40            * @param  Data 要写入的数据
  41            * @retval 无
  42            */
  43          void LCD_WriteData(unsigned char Data)
  44          {
  45   1        LCD_RS=1;
  46   1        LCD_RW=0;
  47   1        LCD_DataPort=Data;
  48   1        LCD_EN=1;
  49   1        LCD_Delay();
  50   1        LCD_EN=0;
  51   1        LCD_Delay();
  52   1      }
  53          
C51 COMPILER V9.60.0.0   LCD1602                                                           05/18/2023 12:23:42 PAGE 2   

  54          /**
  55            * @brief  LCD1602设置光标位置
  56            * @param  Line 行位置，范围：1~2
  57            * @param  Column 列位置，范围：1~16
  58            * @retval 无
  59            */
  60          void LCD_SetCursor(unsigned char Line,unsigned char Column)
  61          {
  62   1        if(Line==1)
  63   1        {
  64   2          LCD_WriteCommand(0x80|(Column-1));
  65   2        }
  66   1        else if(Line==2)
  67   1        {
  68   2          LCD_WriteCommand(0x80|(Column-1+0x40));
  69   2        }
  70   1      }
  71          
  72          /**
  73            * @brief  LCD1602初始化函数
  74            * @param  无
  75            * @retval 无
  76            */
  77          void LCD_Init()
  78          {
  79   1        LCD_WriteCommand(0x38);//八位数据接口，两行显示，5*7点阵
  80   1        LCD_WriteCommand(0x0c);//显示开，光标关，闪烁关
  81   1        LCD_WriteCommand(0x06);//数据读写操作后，光标自动加一，画面不动
  82   1        LCD_WriteCommand(0x01);//光标复位，清屏
  83   1      }
  84          
  85          /**
  86            * @brief  在LCD1602指定位置上显示一个字符
  87            * @param  Line 行位置，范围：1~2
  88            * @param  Column 列位置，范围：1~16
  89            * @param  Char 要显示的字符
  90            * @retval 无
  91            */
  92          void LCD_ShowChar(unsigned char Line,unsigned char Column,char Char)
  93          {
  94   1        LCD_SetCursor(Line,Column);
  95   1        LCD_WriteData(Char);
  96   1      }
  97          
  98          /**
  99            * @brief  在LCD1602指定位置开始显示所给字符串
 100            * @param  Line 起始行位置，范围：1~2
 101            * @param  Column 起始列位置，范围：1~16
 102            * @param  String 要显示的字符串
 103            * @retval 无
 104            */
 105          void LCD_ShowString(unsigned char Line,unsigned char Column,char *String)
 106          {
 107   1        unsigned char i;
 108   1        LCD_SetCursor(Line,Column);
 109   1        for(i=0;String[i]!='\0';i++)
 110   1        {
 111   2          LCD_WriteData(String[i]);
 112   2        }
 113   1      }
 114          
 115          /**
C51 COMPILER V9.60.0.0   LCD1602                                                           05/18/2023 12:23:42 PAGE 3   

 116            * @brief  返回值=X的Y次方
 117            */
 118          int LCD_Pow(int X,int Y)
 119          {
 120   1        unsigned char i;
 121   1        int Result=1;
 122   1        for(i=0;i<Y;i++)
 123   1        {
 124   2          Result*=X;
 125   2        }
 126   1        return Result;
 127   1      }
 128          
 129          /**
 130            * @brief  在LCD1602指定位置开始显示所给数字
 131            * @param  Line 起始行位置，范围：1~2
 132            * @param  Column 起始列位置，范围：1~16
 133            * @param  Number 要显示的数字，范围：0~65535
 134            * @param  Length 要显示数字的长度，范围：1~5
 135            * @retval 无
 136            */
 137          void LCD_ShowNum(unsigned char Line,unsigned char Column,unsigned int Number,unsigned char Length)
 138          {
 139   1        unsigned char i;
 140   1        LCD_SetCursor(Line,Column);
 141   1        for(i=Length;i>0;i--)
 142   1        {
 143   2          LCD_WriteData(Number/LCD_Pow(10,i-1)%10+'0');
 144   2        }
 145   1      }
 146          
 147          /**
 148            * @brief  在LCD1602指定位置开始以有符号十进制显示所给数字
 149            * @param  Line 起始行位置，范围：1~2
 150            * @param  Column 起始列位置，范围：1~16
 151            * @param  Number 要显示的数字，范围：-32768~32767
 152            * @param  Length 要显示数字的长度，范围：1~5
 153            * @retval 无
 154            */
 155          void LCD_ShowSignedNum(unsigned char Line,unsigned char Column,int Number,unsigned char Length)
 156          {
 157   1        unsigned char i;
 158   1        unsigned int Number1;
 159   1        LCD_SetCursor(Line,Column);
 160   1        if(Number>=0)
 161   1        {
 162   2          LCD_WriteData('+');
 163   2          Number1=Number;
 164   2        }
 165   1        else
 166   1        {
 167   2          LCD_WriteData('-');
 168   2          Number1=-Number;
 169   2        }
 170   1        for(i=Length;i>0;i--)
 171   1        {
 172   2          LCD_WriteData(Number1/LCD_Pow(10,i-1)%10+'0');
 173   2        }
 174   1      }
 175          
 176          /**
 177            * @brief  在LCD1602指定位置开始以十六进制显示所给数字
C51 COMPILER V9.60.0.0   LCD1602                                                           05/18/2023 12:23:42 PAGE 4   

 178            * @param  Line 起始行位置，范围：1~2
 179            * @param  Column 起始列位置，范围：1~16
 180            * @param  Number 要显示的数字，范围：0~0xFFFF
 181            * @param  Length 要显示数字的长度，范围：1~4
 182            * @retval 无
 183            */
 184          void LCD_ShowHexNum(unsigned char Line,unsigned char Column,unsigned int Number,unsigned char Length)
 185          {
 186   1        unsigned char i,SingleNumber;
 187   1        LCD_SetCursor(Line,Column);
 188   1        for(i=Length;i>0;i--)
 189   1        {
 190   2          SingleNumber=Number/LCD_Pow(16,i-1)%16;
 191   2          if(SingleNumber<10)
 192   2          {
 193   3            LCD_WriteData(SingleNumber+'0');
 194   3          }
 195   2          else
 196   2          {
 197   3            LCD_WriteData(SingleNumber-10+'A');
 198   3          }
 199   2        }
 200   1      }
 201          
 202          /**
 203            * @brief  在LCD1602指定位置开始以二进制显示所给数字
 204            * @param  Line 起始行位置，范围：1~2
 205            * @param  Column 起始列位置，范围：1~16
 206            * @param  Number 要显示的数字，范围：0~1111 1111 1111 1111
 207            * @param  Length 要显示数字的长度，范围：1~16
 208            * @retval 无
 209            */
 210          void LCD_ShowBinNum(unsigned char Line,unsigned char Column,unsigned int Number,unsigned char Length)
 211          {
 212   1        unsigned char i;
 213   1        LCD_SetCursor(Line,Column);
 214   1        for(i=Length;i>0;i--)
 215   1        {
 216   2          LCD_WriteData(Number/LCD_Pow(2,i-1)%2+'0');
 217   2        }
 218   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    445    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----      29
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
